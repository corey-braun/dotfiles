## Keybinds
bindkey \^U backward-kill-line

## Application-specific setup
# zcomet - https://zcomet.io
if [[ ! -f ${ZDOTDIR:-${HOME}}/.zcomet/bin/zcomet.zsh ]]; then
    git clone https://github.com/agkozak/zcomet.git ${ZDOTDIR:-${HOME}}/.zcomet/bin
fi
source ${ZDOTDIR:-${HOME}}/.zcomet/bin/zcomet.zsh

# Homebrew - https://brew.sh
for brew in {/opt/homebrew,/home/linuxbrew/.linuxbrew}/bin/brew; do
    if [ -f $brew -a -x $brew ]; then
        eval "$($brew shellenv)"
        break
    fi
done

# zoxide - https://github.com/ajeetdsouza/zoxide
if command -v zoxide &> /dev/null; then
    eval "$(zoxide init zsh)"
    alias cd=z
fi

## Custom array variable setup
local -A my_aliases
local -A my_envvars
local -a my_paths

my_aliases=({{ template "shell_array" dict "items" (concat .shell.alias.global .shell.alias.sh) }})

my_envvars=({{ template "shell_array" dict "items" (concat .shell.env.global .shell.env.sh) }})

my_paths=({{ template "shell_array" dict "items" (concat .shell.path.global .shell.path.sh) }})

# Load split config files
if [ -d "${ZDOTDIR:-${HOME}}/.zshrc.d" ]; then
    for i in "${ZDOTDIR:-${HOME}}/.zshrc.d"/* ; do
        source "$i"
    done
fi

# Apply array variables
for k v in "${(@kv)my_aliases}"; do
    alias "$k=$v"
done

for k v in "${(@kv)my_envvars}"; do
    export "$k=$v"
done

path=(${my_paths:|path} $path)

## Set up completions
zcomet compinit
